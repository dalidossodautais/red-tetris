// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WelcomeModal 1`] = `
<WelcomeModal>
  <_default
    onKeyUp={[Function]}
    open={true}
  >
    <ForwardRef(Modal)
      className="makeStyles-modal-1"
      onKeyUp={[Function]}
      open={true}
    >
      <ForwardRef(Portal)
        disablePortal={false}
      >
        <Portal
          containerInfo={
            <body
              style="padding-right: 0px; overflow: hidden;"
            >
              <div
                class="makeStyles-modal-1"
                role="presentation"
                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
              >
                <div
                  aria-hidden="true"
                  style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: rgba(0, 0, 0, 0.5);"
                />
                <div
                  data-test="sentinelStart"
                  tabindex="0"
                />
                <div
                  class="sc-gsTCUz brtUhO"
                  tabindex="-1"
                >
                  <div
                    class="MuiToolbar-root MuiToolbar-regular sc-dlfnbm kUbwbj MuiToolbar-gutters"
                  >
                    <h2
                      class="sc-bdfBwQ klvuel"
                      font-weight="normal"
                    >
                      Choose my username
                    </h2>
                  </div>
                  <div
                    class="sc-hKgILt djZrrf"
                  >
                    <div
                      class="MuiFormControl-root MuiTextField-root makeStyles-textField-2"
                    >
                      <label
                        class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                        data-shrink="false"
                      >
                        My username
                      </label>
                      <div
                        class="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldInput-3 MuiInputBase-formControl"
                      >
                        <input
                          aria-invalid="false"
                          class="MuiInputBase-input MuiOutlinedInput-input"
                          type="text"
                          value=""
                        />
                        <fieldset
                          aria-hidden="true"
                          class="PrivateNotchedOutline-root-4 MuiOutlinedInput-notchedOutline"
                        >
                          <legend
                            class="PrivateNotchedOutline-legendLabelled-6"
                          >
                            <span>
                              My username
                            </span>
                          </legend>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                  <div
                    class="sc-eCssSg bCeQAm"
                  >
                    <button
                      class="MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-button-8 Mui-disabled Mui-disabled"
                      disabled=""
                      tabindex="-1"
                      type="button"
                    >
                      <span
                        class="MuiButton-label"
                      >
                        Begin
                      </span>
                    </button>
                  </div>
                </div>
                <div
                  data-test="sentinelEnd"
                  tabindex="0"
                />
              </div>
            </body>
          }
        >
          <div
            className="makeStyles-modal-1"
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            role="presentation"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "fixed",
                "right": 0,
                "top": 0,
                "zIndex": 1300,
              }
            }
          >
            <ForwardRef(SimpleBackdrop)
              onClick={[Function]}
              open={true}
            >
              <div
                aria-hidden={true}
                onClick={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "transparent",
                    "backgroundColor": "rgba(0, 0, 0, 0.5)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                    "zIndex": -1,
                  }
                }
              />
            </ForwardRef(SimpleBackdrop)>
            <Unstable_TrapFocus
              disableAutoFocus={false}
              disableEnforceFocus={false}
              disableRestoreFocus={false}
              getDoc={[Function]}
              isEnabled={[Function]}
              open={true}
            >
              <div
                data-test="sentinelStart"
                tabIndex={0}
              />
              <styled.div
                tabIndex="-1"
              >
                <div
                  className="sc-gsTCUz brtUhO"
                  tabIndex="-1"
                >
                  <Content
                    input=""
                    setInput={[Function]}
                  >
                    <Styled(WithStyles(ForwardRef(Toolbar)))>
                      <WithStyles(ForwardRef(Toolbar))
                        className="sc-dlfnbm kUbwbj"
                      >
                        <ForwardRef(Toolbar)
                          className="sc-dlfnbm kUbwbj"
                          classes={
                            Object {
                              "dense": "MuiToolbar-dense",
                              "gutters": "MuiToolbar-gutters",
                              "regular": "MuiToolbar-regular",
                              "root": "MuiToolbar-root",
                            }
                          }
                        >
                          <div
                            className="MuiToolbar-root MuiToolbar-regular sc-dlfnbm kUbwbj MuiToolbar-gutters"
                          >
                            <styled.h2
                              fontWeight="normal"
                            >
                              <h2
                                className="sc-bdfBwQ klvuel"
                                fontWeight="normal"
                              >
                                Choose my username
                              </h2>
                            </styled.h2>
                          </div>
                        </ForwardRef(Toolbar)>
                      </WithStyles(ForwardRef(Toolbar))>
                    </Styled(WithStyles(ForwardRef(Toolbar)))>
                    <styled.div>
                      <div
                        className="sc-hKgILt djZrrf"
                      >
                        <_default
                          label="My username"
                          onChange={[Function]}
                          value=""
                          variant="outlined"
                        >
                          <OutlinedTextField
                            color="primary"
                            error={false}
                            label="My username"
                            onChange={[Function]}
                            type="text"
                            value=""
                            width="200px"
                          >
                            <WithStyles(ForwardRef(TextField))
                              InputProps={
                                Object {
                                  "className": "makeStyles-textFieldInput-3",
                                }
                              }
                              className="makeStyles-textField-2"
                              error={false}
                              label="My username"
                              onChange={[Function]}
                              type="text"
                              value=""
                              variant="outlined"
                            >
                              <ForwardRef(TextField)
                                InputProps={
                                  Object {
                                    "className": "makeStyles-textFieldInput-3",
                                  }
                                }
                                className="makeStyles-textField-2"
                                classes={
                                  Object {
                                    "root": "MuiTextField-root",
                                  }
                                }
                                error={false}
                                label="My username"
                                onChange={[Function]}
                                type="text"
                                value=""
                                variant="outlined"
                              >
                                <WithStyles(ForwardRef(FormControl))
                                  className="MuiTextField-root makeStyles-textField-2"
                                  color="primary"
                                  disabled={false}
                                  error={false}
                                  fullWidth={false}
                                  required={false}
                                  variant="outlined"
                                >
                                  <ForwardRef(FormControl)
                                    className="MuiTextField-root makeStyles-textField-2"
                                    classes={
                                      Object {
                                        "fullWidth": "MuiFormControl-fullWidth",
                                        "marginDense": "MuiFormControl-marginDense",
                                        "marginNormal": "MuiFormControl-marginNormal",
                                        "root": "MuiFormControl-root",
                                      }
                                    }
                                    color="primary"
                                    disabled={false}
                                    error={false}
                                    fullWidth={false}
                                    required={false}
                                    variant="outlined"
                                  >
                                    <div
                                      className="MuiFormControl-root MuiTextField-root makeStyles-textField-2"
                                    >
                                      <WithStyles(ForwardRef(InputLabel))>
                                        <ForwardRef(InputLabel)
                                          classes={
                                            Object {
                                              "animated": "MuiInputLabel-animated",
                                              "asterisk": "MuiInputLabel-asterisk",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "filled": "MuiInputLabel-filled",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInputLabel-formControl",
                                              "marginDense": "MuiInputLabel-marginDense",
                                              "outlined": "MuiInputLabel-outlined",
                                              "required": "Mui-required",
                                              "root": "MuiInputLabel-root",
                                              "shrink": "MuiInputLabel-shrink",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(FormLabel))
                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                            classes={
                                              Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "required": "Mui-required",
                                              }
                                            }
                                            data-shrink={false}
                                          >
                                            <ForwardRef(FormLabel)
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "filled": "MuiFormLabel-filled",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "required": "Mui-required Mui-required",
                                                  "root": "MuiFormLabel-root",
                                                }
                                              }
                                              data-shrink={false}
                                            >
                                              <label
                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                data-shrink={false}
                                              >
                                                My username
                                              </label>
                                            </ForwardRef(FormLabel)>
                                          </WithStyles(ForwardRef(FormLabel))>
                                        </ForwardRef(InputLabel)>
                                      </WithStyles(ForwardRef(InputLabel))>
                                      <WithStyles(ForwardRef(OutlinedInput))
                                        autoFocus={false}
                                        className="makeStyles-textFieldInput-3"
                                        fullWidth={false}
                                        label={
                                          <React.Fragment>
                                            My username
                                          </React.Fragment>
                                        }
                                        multiline={false}
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      >
                                        <ForwardRef(OutlinedInput)
                                          autoFocus={false}
                                          className="makeStyles-textFieldInput-3"
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                              "adornedStart": "MuiOutlinedInput-adornedStart",
                                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "input": "MuiOutlinedInput-input",
                                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                              "marginDense": "MuiOutlinedInput-marginDense",
                                              "multiline": "MuiOutlinedInput-multiline",
                                              "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                              "root": "MuiOutlinedInput-root",
                                            }
                                          }
                                          fullWidth={false}
                                          label={
                                            <React.Fragment>
                                              My username
                                            </React.Fragment>
                                          }
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value=""
                                        >
                                          <WithStyles(ForwardRef(InputBase))
                                            autoFocus={false}
                                            className="makeStyles-textFieldInput-3"
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "input": "MuiOutlinedInput-input",
                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                "multiline": "MuiOutlinedInput-multiline",
                                                "notchedOutline": null,
                                                "root": "MuiOutlinedInput-root",
                                              }
                                            }
                                            fullWidth={false}
                                            inputComponent="input"
                                            multiline={false}
                                            onChange={[Function]}
                                            renderSuffix={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <ForwardRef(InputBase)
                                              autoFocus={false}
                                              className="makeStyles-textFieldInput-3"
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                  "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "formControl": "MuiInputBase-formControl",
                                                  "fullWidth": "MuiInputBase-fullWidth",
                                                  "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                  "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                  "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                  "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                }
                                              }
                                              fullWidth={false}
                                              inputComponent="input"
                                              multiline={false}
                                              onChange={[Function]}
                                              renderSuffix={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <div
                                                className="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldInput-3 MuiInputBase-formControl"
                                                onClick={[Function]}
                                              >
                                                <input
                                                  aria-invalid={false}
                                                  autoFocus={false}
                                                  className="MuiInputBase-input MuiOutlinedInput-input"
                                                  disabled={false}
                                                  onAnimationStart={[Function]}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  required={false}
                                                  type="text"
                                                  value=""
                                                />
                                                <WithStyles(ForwardRef(NotchedOutline))
                                                  className="MuiOutlinedInput-notchedOutline"
                                                  label={
                                                    <React.Fragment>
                                                      My username
                                                    </React.Fragment>
                                                  }
                                                  labelWidth={0}
                                                  notched={false}
                                                >
                                                  <ForwardRef(NotchedOutline)
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    classes={
                                                      Object {
                                                        "legend": "PrivateNotchedOutline-legend-5",
                                                        "legendLabelled": "PrivateNotchedOutline-legendLabelled-6",
                                                        "legendNotched": "PrivateNotchedOutline-legendNotched-7",
                                                        "root": "PrivateNotchedOutline-root-4",
                                                      }
                                                    }
                                                    label={
                                                      <React.Fragment>
                                                        My username
                                                      </React.Fragment>
                                                    }
                                                    labelWidth={0}
                                                    notched={false}
                                                  >
                                                    <fieldset
                                                      aria-hidden={true}
                                                      className="PrivateNotchedOutline-root-4 MuiOutlinedInput-notchedOutline"
                                                    >
                                                      <legend
                                                        className="PrivateNotchedOutline-legendLabelled-6"
                                                      >
                                                        <span>
                                                          My username
                                                        </span>
                                                      </legend>
                                                    </fieldset>
                                                  </ForwardRef(NotchedOutline)>
                                                </WithStyles(ForwardRef(NotchedOutline))>
                                              </div>
                                            </ForwardRef(InputBase)>
                                          </WithStyles(ForwardRef(InputBase))>
                                        </ForwardRef(OutlinedInput)>
                                      </WithStyles(ForwardRef(OutlinedInput))>
                                    </div>
                                  </ForwardRef(FormControl)>
                                </WithStyles(ForwardRef(FormControl))>
                              </ForwardRef(TextField)>
                            </WithStyles(ForwardRef(TextField))>
                          </OutlinedTextField>
                        </_default>
                      </div>
                    </styled.div>
                    <styled.div>
                      <div
                        className="sc-eCssSg bCeQAm"
                      >
                        <_default
                          disabled={true}
                          onClick={[Function]}
                          variant="contained"
                        >
                          <ContainedButton
                            disabled={true}
                            onClick={[Function]}
                          >
                            <WithStyles(ForwardRef(Button))
                              className="makeStyles-button-8"
                              disabled={true}
                              onClick={[Function]}
                              variant="contained"
                            >
                              <ForwardRef(Button)
                                className="makeStyles-button-8"
                                classes={
                                  Object {
                                    "colorInherit": "MuiButton-colorInherit",
                                    "contained": "MuiButton-contained",
                                    "containedPrimary": "MuiButton-containedPrimary",
                                    "containedSecondary": "MuiButton-containedSecondary",
                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                    "disableElevation": "MuiButton-disableElevation",
                                    "disabled": "Mui-disabled",
                                    "endIcon": "MuiButton-endIcon",
                                    "focusVisible": "Mui-focusVisible",
                                    "fullWidth": "MuiButton-fullWidth",
                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                    "label": "MuiButton-label",
                                    "outlined": "MuiButton-outlined",
                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                    "root": "MuiButton-root",
                                    "sizeLarge": "MuiButton-sizeLarge",
                                    "sizeSmall": "MuiButton-sizeSmall",
                                    "startIcon": "MuiButton-startIcon",
                                    "text": "MuiButton-text",
                                    "textPrimary": "MuiButton-textPrimary",
                                    "textSecondary": "MuiButton-textSecondary",
                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                  }
                                }
                                disabled={true}
                                onClick={[Function]}
                                variant="contained"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiButton-root MuiButton-contained makeStyles-button-8 Mui-disabled"
                                  component="button"
                                  disabled={true}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiButton-root MuiButton-contained makeStyles-button-8 Mui-disabled"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="button"
                                    disabled={true}
                                    focusRipple={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <button
                                      className="MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-button-8 Mui-disabled Mui-disabled"
                                      disabled={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <span
                                        className="MuiButton-label"
                                      >
                                        Begin
                                      </span>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(Button)>
                            </WithStyles(ForwardRef(Button))>
                          </ContainedButton>
                        </_default>
                      </div>
                    </styled.div>
                  </Content>
                </div>
              </styled.div>
              <div
                data-test="sentinelEnd"
                tabIndex={0}
              />
            </Unstable_TrapFocus>
          </div>
        </Portal>
      </ForwardRef(Portal)>
    </ForwardRef(Modal)>
  </_default>
</WelcomeModal>
`;

exports[`WelcomeModal 2`] = `
<WelcomeModal>
  <_default
    onKeyUp={[Function]}
    open={true}
  >
    <ForwardRef(Modal)
      className="makeStyles-modal-9"
      onKeyUp={[Function]}
      open={true}
    >
      <ForwardRef(Portal)
        disablePortal={false}
      >
        <Portal
          containerInfo={
            <body
              style="padding-right: 0px; overflow: hidden;"
            >
              <div
                class="makeStyles-modal-9"
                role="presentation"
                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
              >
                <div
                  aria-hidden="true"
                  style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: rgba(0, 0, 0, 0.5);"
                />
                <div
                  data-test="sentinelStart"
                  tabindex="0"
                />
                <div
                  class="sc-gsTCUz brtUhO"
                  tabindex="-1"
                >
                  <div
                    class="MuiToolbar-root MuiToolbar-regular sc-dlfnbm kUbwbj MuiToolbar-gutters"
                  >
                    <h2
                      class="sc-bdfBwQ klvuel"
                      font-weight="normal"
                    >
                      Choose my username
                    </h2>
                  </div>
                  <div
                    class="sc-hKgILt djZrrf"
                  >
                    <div
                      class="MuiFormControl-root MuiTextField-root makeStyles-textField-10"
                    >
                      <label
                        class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled"
                        data-shrink="true"
                      >
                        My username
                      </label>
                      <div
                        class="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldInput-11 MuiInputBase-formControl"
                      >
                        <input
                          aria-invalid="false"
                          class="MuiInputBase-input MuiOutlinedInput-input"
                          type="text"
                          value="Hello"
                        />
                        <fieldset
                          aria-hidden="true"
                          class="PrivateNotchedOutline-root-4 MuiOutlinedInput-notchedOutline"
                        >
                          <legend
                            class="PrivateNotchedOutline-legendLabelled-6 PrivateNotchedOutline-legendNotched-7"
                          >
                            <span>
                              My username
                            </span>
                          </legend>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                  <div
                    class="sc-eCssSg bCeQAm"
                  >
                    <button
                      class="MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-button-12"
                      tabindex="0"
                      type="button"
                    >
                      <span
                        class="MuiButton-label"
                      >
                        Begin
                      </span>
                      <span
                        class="MuiTouchRipple-root"
                      />
                    </button>
                  </div>
                </div>
                <div
                  data-test="sentinelEnd"
                  tabindex="0"
                />
              </div>
            </body>
          }
        >
          <div
            className="makeStyles-modal-9"
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            role="presentation"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "fixed",
                "right": 0,
                "top": 0,
                "zIndex": 1300,
              }
            }
          >
            <ForwardRef(SimpleBackdrop)
              onClick={[Function]}
              open={true}
            >
              <div
                aria-hidden={true}
                onClick={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "transparent",
                    "backgroundColor": "rgba(0, 0, 0, 0.5)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                    "zIndex": -1,
                  }
                }
              />
            </ForwardRef(SimpleBackdrop)>
            <Unstable_TrapFocus
              disableAutoFocus={false}
              disableEnforceFocus={false}
              disableRestoreFocus={false}
              getDoc={[Function]}
              isEnabled={[Function]}
              open={true}
            >
              <div
                data-test="sentinelStart"
                tabIndex={0}
              />
              <styled.div
                tabIndex="-1"
              >
                <div
                  className="sc-gsTCUz brtUhO"
                  tabIndex="-1"
                >
                  <Content
                    input="Hello"
                    setInput={[Function]}
                  >
                    <Styled(WithStyles(ForwardRef(Toolbar)))>
                      <WithStyles(ForwardRef(Toolbar))
                        className="sc-dlfnbm kUbwbj"
                      >
                        <ForwardRef(Toolbar)
                          className="sc-dlfnbm kUbwbj"
                          classes={
                            Object {
                              "dense": "MuiToolbar-dense",
                              "gutters": "MuiToolbar-gutters",
                              "regular": "MuiToolbar-regular",
                              "root": "MuiToolbar-root",
                            }
                          }
                        >
                          <div
                            className="MuiToolbar-root MuiToolbar-regular sc-dlfnbm kUbwbj MuiToolbar-gutters"
                          >
                            <styled.h2
                              fontWeight="normal"
                            >
                              <h2
                                className="sc-bdfBwQ klvuel"
                                fontWeight="normal"
                              >
                                Choose my username
                              </h2>
                            </styled.h2>
                          </div>
                        </ForwardRef(Toolbar)>
                      </WithStyles(ForwardRef(Toolbar))>
                    </Styled(WithStyles(ForwardRef(Toolbar)))>
                    <styled.div>
                      <div
                        className="sc-hKgILt djZrrf"
                      >
                        <_default
                          label="My username"
                          onChange={[Function]}
                          value="Hello"
                          variant="outlined"
                        >
                          <OutlinedTextField
                            color="primary"
                            error={false}
                            label="My username"
                            onChange={[Function]}
                            type="text"
                            value="Hello"
                            width="200px"
                          >
                            <WithStyles(ForwardRef(TextField))
                              InputProps={
                                Object {
                                  "className": "makeStyles-textFieldInput-11",
                                }
                              }
                              className="makeStyles-textField-10"
                              error={false}
                              label="My username"
                              onChange={[Function]}
                              type="text"
                              value="Hello"
                              variant="outlined"
                            >
                              <ForwardRef(TextField)
                                InputProps={
                                  Object {
                                    "className": "makeStyles-textFieldInput-11",
                                  }
                                }
                                className="makeStyles-textField-10"
                                classes={
                                  Object {
                                    "root": "MuiTextField-root",
                                  }
                                }
                                error={false}
                                label="My username"
                                onChange={[Function]}
                                type="text"
                                value="Hello"
                                variant="outlined"
                              >
                                <WithStyles(ForwardRef(FormControl))
                                  className="MuiTextField-root makeStyles-textField-10"
                                  color="primary"
                                  disabled={false}
                                  error={false}
                                  fullWidth={false}
                                  required={false}
                                  variant="outlined"
                                >
                                  <ForwardRef(FormControl)
                                    className="MuiTextField-root makeStyles-textField-10"
                                    classes={
                                      Object {
                                        "fullWidth": "MuiFormControl-fullWidth",
                                        "marginDense": "MuiFormControl-marginDense",
                                        "marginNormal": "MuiFormControl-marginNormal",
                                        "root": "MuiFormControl-root",
                                      }
                                    }
                                    color="primary"
                                    disabled={false}
                                    error={false}
                                    fullWidth={false}
                                    required={false}
                                    variant="outlined"
                                  >
                                    <div
                                      className="MuiFormControl-root MuiTextField-root makeStyles-textField-10"
                                    >
                                      <WithStyles(ForwardRef(InputLabel))>
                                        <ForwardRef(InputLabel)
                                          classes={
                                            Object {
                                              "animated": "MuiInputLabel-animated",
                                              "asterisk": "MuiInputLabel-asterisk",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "filled": "MuiInputLabel-filled",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInputLabel-formControl",
                                              "marginDense": "MuiInputLabel-marginDense",
                                              "outlined": "MuiInputLabel-outlined",
                                              "required": "Mui-required",
                                              "root": "MuiInputLabel-root",
                                              "shrink": "MuiInputLabel-shrink",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(FormLabel))
                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                            classes={
                                              Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "required": "Mui-required",
                                              }
                                            }
                                            data-shrink={true}
                                          >
                                            <ForwardRef(FormLabel)
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "filled": "MuiFormLabel-filled",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "required": "Mui-required Mui-required",
                                                  "root": "MuiFormLabel-root",
                                                }
                                              }
                                              data-shrink={true}
                                            >
                                              <label
                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled"
                                                data-shrink={true}
                                              >
                                                My username
                                              </label>
                                            </ForwardRef(FormLabel)>
                                          </WithStyles(ForwardRef(FormLabel))>
                                        </ForwardRef(InputLabel)>
                                      </WithStyles(ForwardRef(InputLabel))>
                                      <WithStyles(ForwardRef(OutlinedInput))
                                        autoFocus={false}
                                        className="makeStyles-textFieldInput-11"
                                        fullWidth={false}
                                        label={
                                          <React.Fragment>
                                            My username
                                          </React.Fragment>
                                        }
                                        multiline={false}
                                        onChange={[Function]}
                                        type="text"
                                        value="Hello"
                                      >
                                        <ForwardRef(OutlinedInput)
                                          autoFocus={false}
                                          className="makeStyles-textFieldInput-11"
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                              "adornedStart": "MuiOutlinedInput-adornedStart",
                                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "input": "MuiOutlinedInput-input",
                                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                              "marginDense": "MuiOutlinedInput-marginDense",
                                              "multiline": "MuiOutlinedInput-multiline",
                                              "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                              "root": "MuiOutlinedInput-root",
                                            }
                                          }
                                          fullWidth={false}
                                          label={
                                            <React.Fragment>
                                              My username
                                            </React.Fragment>
                                          }
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value="Hello"
                                        >
                                          <WithStyles(ForwardRef(InputBase))
                                            autoFocus={false}
                                            className="makeStyles-textFieldInput-11"
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "input": "MuiOutlinedInput-input",
                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                "multiline": "MuiOutlinedInput-multiline",
                                                "notchedOutline": null,
                                                "root": "MuiOutlinedInput-root",
                                              }
                                            }
                                            fullWidth={false}
                                            inputComponent="input"
                                            multiline={false}
                                            onChange={[Function]}
                                            renderSuffix={[Function]}
                                            type="text"
                                            value="Hello"
                                          >
                                            <ForwardRef(InputBase)
                                              autoFocus={false}
                                              className="makeStyles-textFieldInput-11"
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                  "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "formControl": "MuiInputBase-formControl",
                                                  "fullWidth": "MuiInputBase-fullWidth",
                                                  "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                  "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                  "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                  "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                }
                                              }
                                              fullWidth={false}
                                              inputComponent="input"
                                              multiline={false}
                                              onChange={[Function]}
                                              renderSuffix={[Function]}
                                              type="text"
                                              value="Hello"
                                            >
                                              <div
                                                className="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldInput-11 MuiInputBase-formControl"
                                                onClick={[Function]}
                                              >
                                                <input
                                                  aria-invalid={false}
                                                  autoFocus={false}
                                                  className="MuiInputBase-input MuiOutlinedInput-input"
                                                  disabled={false}
                                                  onAnimationStart={[Function]}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  required={false}
                                                  type="text"
                                                  value="Hello"
                                                />
                                                <WithStyles(ForwardRef(NotchedOutline))
                                                  className="MuiOutlinedInput-notchedOutline"
                                                  label={
                                                    <React.Fragment>
                                                      My username
                                                    </React.Fragment>
                                                  }
                                                  labelWidth={0}
                                                  notched={true}
                                                >
                                                  <ForwardRef(NotchedOutline)
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    classes={
                                                      Object {
                                                        "legend": "PrivateNotchedOutline-legend-5",
                                                        "legendLabelled": "PrivateNotchedOutline-legendLabelled-6",
                                                        "legendNotched": "PrivateNotchedOutline-legendNotched-7",
                                                        "root": "PrivateNotchedOutline-root-4",
                                                      }
                                                    }
                                                    label={
                                                      <React.Fragment>
                                                        My username
                                                      </React.Fragment>
                                                    }
                                                    labelWidth={0}
                                                    notched={true}
                                                  >
                                                    <fieldset
                                                      aria-hidden={true}
                                                      className="PrivateNotchedOutline-root-4 MuiOutlinedInput-notchedOutline"
                                                    >
                                                      <legend
                                                        className="PrivateNotchedOutline-legendLabelled-6 PrivateNotchedOutline-legendNotched-7"
                                                      >
                                                        <span>
                                                          My username
                                                        </span>
                                                      </legend>
                                                    </fieldset>
                                                  </ForwardRef(NotchedOutline)>
                                                </WithStyles(ForwardRef(NotchedOutline))>
                                              </div>
                                            </ForwardRef(InputBase)>
                                          </WithStyles(ForwardRef(InputBase))>
                                        </ForwardRef(OutlinedInput)>
                                      </WithStyles(ForwardRef(OutlinedInput))>
                                    </div>
                                  </ForwardRef(FormControl)>
                                </WithStyles(ForwardRef(FormControl))>
                              </ForwardRef(TextField)>
                            </WithStyles(ForwardRef(TextField))>
                          </OutlinedTextField>
                        </_default>
                      </div>
                    </styled.div>
                    <styled.div>
                      <div
                        className="sc-eCssSg bCeQAm"
                      >
                        <_default
                          disabled={false}
                          onClick={[Function]}
                          variant="contained"
                        >
                          <ContainedButton
                            disabled={false}
                            onClick={[Function]}
                          >
                            <WithStyles(ForwardRef(Button))
                              className="makeStyles-button-12"
                              disabled={false}
                              onClick={[Function]}
                              variant="contained"
                            >
                              <ForwardRef(Button)
                                className="makeStyles-button-12"
                                classes={
                                  Object {
                                    "colorInherit": "MuiButton-colorInherit",
                                    "contained": "MuiButton-contained",
                                    "containedPrimary": "MuiButton-containedPrimary",
                                    "containedSecondary": "MuiButton-containedSecondary",
                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                    "disableElevation": "MuiButton-disableElevation",
                                    "disabled": "Mui-disabled",
                                    "endIcon": "MuiButton-endIcon",
                                    "focusVisible": "Mui-focusVisible",
                                    "fullWidth": "MuiButton-fullWidth",
                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                    "label": "MuiButton-label",
                                    "outlined": "MuiButton-outlined",
                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                    "root": "MuiButton-root",
                                    "sizeLarge": "MuiButton-sizeLarge",
                                    "sizeSmall": "MuiButton-sizeSmall",
                                    "startIcon": "MuiButton-startIcon",
                                    "text": "MuiButton-text",
                                    "textPrimary": "MuiButton-textPrimary",
                                    "textSecondary": "MuiButton-textSecondary",
                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                  }
                                }
                                disabled={false}
                                onClick={[Function]}
                                variant="contained"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiButton-root MuiButton-contained makeStyles-button-12"
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiButton-root MuiButton-contained makeStyles-button-12"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="button"
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <button
                                      className="MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-button-12"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiButton-label"
                                      >
                                        Begin
                                      </span>
                                      <WithStyles(memo)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(Button)>
                            </WithStyles(ForwardRef(Button))>
                          </ContainedButton>
                        </_default>
                      </div>
                    </styled.div>
                  </Content>
                </div>
              </styled.div>
              <div
                data-test="sentinelEnd"
                tabIndex={0}
              />
            </Unstable_TrapFocus>
          </div>
        </Portal>
      </ForwardRef(Portal)>
    </ForwardRef(Modal)>
  </_default>
</WelcomeModal>
`;

exports[`WelcomeModal 3`] = `
<WelcomeModal>
  <_default
    onKeyUp={[Function]}
    open={true}
  >
    <ForwardRef(Modal)
      className="makeStyles-modal-9"
      onKeyUp={[Function]}
      open={true}
    >
      <ForwardRef(Portal)
        disablePortal={false}
      >
        <Portal
          containerInfo={
            <body
              style="padding-right: 0px; overflow: hidden;"
            >
              <div
                class="makeStyles-modal-9"
                role="presentation"
                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
              >
                <div
                  aria-hidden="true"
                  style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: rgba(0, 0, 0, 0.5);"
                />
                <div
                  data-test="sentinelStart"
                  tabindex="0"
                />
                <div
                  class="sc-gsTCUz brtUhO"
                  tabindex="-1"
                >
                  <div
                    class="MuiToolbar-root MuiToolbar-regular sc-dlfnbm kUbwbj MuiToolbar-gutters"
                  >
                    <h2
                      class="sc-bdfBwQ klvuel"
                      font-weight="normal"
                    >
                      Choose my username
                    </h2>
                  </div>
                  <div
                    class="sc-hKgILt djZrrf"
                  >
                    <div
                      class="MuiFormControl-root MuiTextField-root makeStyles-textField-10"
                    >
                      <label
                        class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled"
                        data-shrink="true"
                      >
                        My username
                      </label>
                      <div
                        class="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldInput-11 MuiInputBase-formControl"
                      >
                        <input
                          aria-invalid="false"
                          class="MuiInputBase-input MuiOutlinedInput-input"
                          type="text"
                          value="Hello"
                        />
                        <fieldset
                          aria-hidden="true"
                          class="PrivateNotchedOutline-root-4 MuiOutlinedInput-notchedOutline"
                        >
                          <legend
                            class="PrivateNotchedOutline-legendLabelled-6 PrivateNotchedOutline-legendNotched-7"
                          >
                            <span>
                              My username
                            </span>
                          </legend>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                  <div
                    class="sc-eCssSg bCeQAm"
                  >
                    <button
                      class="MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-button-12"
                      tabindex="0"
                      type="button"
                    >
                      <span
                        class="MuiButton-label"
                      >
                        Begin
                      </span>
                      <span
                        class="MuiTouchRipple-root"
                      />
                    </button>
                  </div>
                </div>
                <div
                  data-test="sentinelEnd"
                  tabindex="0"
                />
              </div>
            </body>
          }
        >
          <div
            className="makeStyles-modal-9"
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            role="presentation"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "fixed",
                "right": 0,
                "top": 0,
                "zIndex": 1300,
              }
            }
          >
            <ForwardRef(SimpleBackdrop)
              onClick={[Function]}
              open={true}
            >
              <div
                aria-hidden={true}
                onClick={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "transparent",
                    "backgroundColor": "rgba(0, 0, 0, 0.5)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                    "zIndex": -1,
                  }
                }
              />
            </ForwardRef(SimpleBackdrop)>
            <Unstable_TrapFocus
              disableAutoFocus={false}
              disableEnforceFocus={false}
              disableRestoreFocus={false}
              getDoc={[Function]}
              isEnabled={[Function]}
              open={true}
            >
              <div
                data-test="sentinelStart"
                tabIndex={0}
              />
              <styled.div
                tabIndex="-1"
              >
                <div
                  className="sc-gsTCUz brtUhO"
                  tabIndex="-1"
                >
                  <Content
                    input="Hello"
                    setInput={[Function]}
                  >
                    <Styled(WithStyles(ForwardRef(Toolbar)))>
                      <WithStyles(ForwardRef(Toolbar))
                        className="sc-dlfnbm kUbwbj"
                      >
                        <ForwardRef(Toolbar)
                          className="sc-dlfnbm kUbwbj"
                          classes={
                            Object {
                              "dense": "MuiToolbar-dense",
                              "gutters": "MuiToolbar-gutters",
                              "regular": "MuiToolbar-regular",
                              "root": "MuiToolbar-root",
                            }
                          }
                        >
                          <div
                            className="MuiToolbar-root MuiToolbar-regular sc-dlfnbm kUbwbj MuiToolbar-gutters"
                          >
                            <styled.h2
                              fontWeight="normal"
                            >
                              <h2
                                className="sc-bdfBwQ klvuel"
                                fontWeight="normal"
                              >
                                Choose my username
                              </h2>
                            </styled.h2>
                          </div>
                        </ForwardRef(Toolbar)>
                      </WithStyles(ForwardRef(Toolbar))>
                    </Styled(WithStyles(ForwardRef(Toolbar)))>
                    <styled.div>
                      <div
                        className="sc-hKgILt djZrrf"
                      >
                        <_default
                          label="My username"
                          onChange={[Function]}
                          value="Hello"
                          variant="outlined"
                        >
                          <OutlinedTextField
                            color="primary"
                            error={false}
                            label="My username"
                            onChange={[Function]}
                            type="text"
                            value="Hello"
                            width="200px"
                          >
                            <WithStyles(ForwardRef(TextField))
                              InputProps={
                                Object {
                                  "className": "makeStyles-textFieldInput-11",
                                }
                              }
                              className="makeStyles-textField-10"
                              error={false}
                              label="My username"
                              onChange={[Function]}
                              type="text"
                              value="Hello"
                              variant="outlined"
                            >
                              <ForwardRef(TextField)
                                InputProps={
                                  Object {
                                    "className": "makeStyles-textFieldInput-11",
                                  }
                                }
                                className="makeStyles-textField-10"
                                classes={
                                  Object {
                                    "root": "MuiTextField-root",
                                  }
                                }
                                error={false}
                                label="My username"
                                onChange={[Function]}
                                type="text"
                                value="Hello"
                                variant="outlined"
                              >
                                <WithStyles(ForwardRef(FormControl))
                                  className="MuiTextField-root makeStyles-textField-10"
                                  color="primary"
                                  disabled={false}
                                  error={false}
                                  fullWidth={false}
                                  required={false}
                                  variant="outlined"
                                >
                                  <ForwardRef(FormControl)
                                    className="MuiTextField-root makeStyles-textField-10"
                                    classes={
                                      Object {
                                        "fullWidth": "MuiFormControl-fullWidth",
                                        "marginDense": "MuiFormControl-marginDense",
                                        "marginNormal": "MuiFormControl-marginNormal",
                                        "root": "MuiFormControl-root",
                                      }
                                    }
                                    color="primary"
                                    disabled={false}
                                    error={false}
                                    fullWidth={false}
                                    required={false}
                                    variant="outlined"
                                  >
                                    <div
                                      className="MuiFormControl-root MuiTextField-root makeStyles-textField-10"
                                    >
                                      <WithStyles(ForwardRef(InputLabel))>
                                        <ForwardRef(InputLabel)
                                          classes={
                                            Object {
                                              "animated": "MuiInputLabel-animated",
                                              "asterisk": "MuiInputLabel-asterisk",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "filled": "MuiInputLabel-filled",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInputLabel-formControl",
                                              "marginDense": "MuiInputLabel-marginDense",
                                              "outlined": "MuiInputLabel-outlined",
                                              "required": "Mui-required",
                                              "root": "MuiInputLabel-root",
                                              "shrink": "MuiInputLabel-shrink",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(FormLabel))
                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                            classes={
                                              Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "required": "Mui-required",
                                              }
                                            }
                                            data-shrink={true}
                                          >
                                            <ForwardRef(FormLabel)
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "filled": "MuiFormLabel-filled",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "required": "Mui-required Mui-required",
                                                  "root": "MuiFormLabel-root",
                                                }
                                              }
                                              data-shrink={true}
                                            >
                                              <label
                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled"
                                                data-shrink={true}
                                              >
                                                My username
                                              </label>
                                            </ForwardRef(FormLabel)>
                                          </WithStyles(ForwardRef(FormLabel))>
                                        </ForwardRef(InputLabel)>
                                      </WithStyles(ForwardRef(InputLabel))>
                                      <WithStyles(ForwardRef(OutlinedInput))
                                        autoFocus={false}
                                        className="makeStyles-textFieldInput-11"
                                        fullWidth={false}
                                        label={
                                          <React.Fragment>
                                            My username
                                          </React.Fragment>
                                        }
                                        multiline={false}
                                        onChange={[Function]}
                                        type="text"
                                        value="Hello"
                                      >
                                        <ForwardRef(OutlinedInput)
                                          autoFocus={false}
                                          className="makeStyles-textFieldInput-11"
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                              "adornedStart": "MuiOutlinedInput-adornedStart",
                                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "input": "MuiOutlinedInput-input",
                                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                              "marginDense": "MuiOutlinedInput-marginDense",
                                              "multiline": "MuiOutlinedInput-multiline",
                                              "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                              "root": "MuiOutlinedInput-root",
                                            }
                                          }
                                          fullWidth={false}
                                          label={
                                            <React.Fragment>
                                              My username
                                            </React.Fragment>
                                          }
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value="Hello"
                                        >
                                          <WithStyles(ForwardRef(InputBase))
                                            autoFocus={false}
                                            className="makeStyles-textFieldInput-11"
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "input": "MuiOutlinedInput-input",
                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                "multiline": "MuiOutlinedInput-multiline",
                                                "notchedOutline": null,
                                                "root": "MuiOutlinedInput-root",
                                              }
                                            }
                                            fullWidth={false}
                                            inputComponent="input"
                                            multiline={false}
                                            onChange={[Function]}
                                            renderSuffix={[Function]}
                                            type="text"
                                            value="Hello"
                                          >
                                            <ForwardRef(InputBase)
                                              autoFocus={false}
                                              className="makeStyles-textFieldInput-11"
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                  "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "formControl": "MuiInputBase-formControl",
                                                  "fullWidth": "MuiInputBase-fullWidth",
                                                  "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                  "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                  "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                  "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                }
                                              }
                                              fullWidth={false}
                                              inputComponent="input"
                                              multiline={false}
                                              onChange={[Function]}
                                              renderSuffix={[Function]}
                                              type="text"
                                              value="Hello"
                                            >
                                              <div
                                                className="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldInput-11 MuiInputBase-formControl"
                                                onClick={[Function]}
                                              >
                                                <input
                                                  aria-invalid={false}
                                                  autoFocus={false}
                                                  className="MuiInputBase-input MuiOutlinedInput-input"
                                                  disabled={false}
                                                  onAnimationStart={[Function]}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  required={false}
                                                  type="text"
                                                  value="Hello"
                                                />
                                                <WithStyles(ForwardRef(NotchedOutline))
                                                  className="MuiOutlinedInput-notchedOutline"
                                                  label={
                                                    <React.Fragment>
                                                      My username
                                                    </React.Fragment>
                                                  }
                                                  labelWidth={0}
                                                  notched={true}
                                                >
                                                  <ForwardRef(NotchedOutline)
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    classes={
                                                      Object {
                                                        "legend": "PrivateNotchedOutline-legend-5",
                                                        "legendLabelled": "PrivateNotchedOutline-legendLabelled-6",
                                                        "legendNotched": "PrivateNotchedOutline-legendNotched-7",
                                                        "root": "PrivateNotchedOutline-root-4",
                                                      }
                                                    }
                                                    label={
                                                      <React.Fragment>
                                                        My username
                                                      </React.Fragment>
                                                    }
                                                    labelWidth={0}
                                                    notched={true}
                                                  >
                                                    <fieldset
                                                      aria-hidden={true}
                                                      className="PrivateNotchedOutline-root-4 MuiOutlinedInput-notchedOutline"
                                                    >
                                                      <legend
                                                        className="PrivateNotchedOutline-legendLabelled-6 PrivateNotchedOutline-legendNotched-7"
                                                      >
                                                        <span>
                                                          My username
                                                        </span>
                                                      </legend>
                                                    </fieldset>
                                                  </ForwardRef(NotchedOutline)>
                                                </WithStyles(ForwardRef(NotchedOutline))>
                                              </div>
                                            </ForwardRef(InputBase)>
                                          </WithStyles(ForwardRef(InputBase))>
                                        </ForwardRef(OutlinedInput)>
                                      </WithStyles(ForwardRef(OutlinedInput))>
                                    </div>
                                  </ForwardRef(FormControl)>
                                </WithStyles(ForwardRef(FormControl))>
                              </ForwardRef(TextField)>
                            </WithStyles(ForwardRef(TextField))>
                          </OutlinedTextField>
                        </_default>
                      </div>
                    </styled.div>
                    <styled.div>
                      <div
                        className="sc-eCssSg bCeQAm"
                      >
                        <_default
                          disabled={false}
                          onClick={[Function]}
                          variant="contained"
                        >
                          <ContainedButton
                            disabled={false}
                            onClick={[Function]}
                          >
                            <WithStyles(ForwardRef(Button))
                              className="makeStyles-button-12"
                              disabled={false}
                              onClick={[Function]}
                              variant="contained"
                            >
                              <ForwardRef(Button)
                                className="makeStyles-button-12"
                                classes={
                                  Object {
                                    "colorInherit": "MuiButton-colorInherit",
                                    "contained": "MuiButton-contained",
                                    "containedPrimary": "MuiButton-containedPrimary",
                                    "containedSecondary": "MuiButton-containedSecondary",
                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                    "disableElevation": "MuiButton-disableElevation",
                                    "disabled": "Mui-disabled",
                                    "endIcon": "MuiButton-endIcon",
                                    "focusVisible": "Mui-focusVisible",
                                    "fullWidth": "MuiButton-fullWidth",
                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                    "label": "MuiButton-label",
                                    "outlined": "MuiButton-outlined",
                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                    "root": "MuiButton-root",
                                    "sizeLarge": "MuiButton-sizeLarge",
                                    "sizeSmall": "MuiButton-sizeSmall",
                                    "startIcon": "MuiButton-startIcon",
                                    "text": "MuiButton-text",
                                    "textPrimary": "MuiButton-textPrimary",
                                    "textSecondary": "MuiButton-textSecondary",
                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                  }
                                }
                                disabled={false}
                                onClick={[Function]}
                                variant="contained"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiButton-root MuiButton-contained makeStyles-button-12"
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiButton-root MuiButton-contained makeStyles-button-12"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="button"
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <button
                                      className="MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-button-12"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiButton-label"
                                      >
                                        Begin
                                      </span>
                                      <WithStyles(memo)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(Button)>
                            </WithStyles(ForwardRef(Button))>
                          </ContainedButton>
                        </_default>
                      </div>
                    </styled.div>
                  </Content>
                </div>
              </styled.div>
              <div
                data-test="sentinelEnd"
                tabIndex={0}
              />
            </Unstable_TrapFocus>
          </div>
        </Portal>
      </ForwardRef(Portal)>
    </ForwardRef(Modal)>
  </_default>
</WelcomeModal>
`;
