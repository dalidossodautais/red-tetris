// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly enzyme 1`] = `
<App>
  <Provider>
    <Component
      theme={
        Object {
          "name": "Red",
          "primaryBackgroundColor": "red",
          "primaryTextColor": "white",
          "secondaryBackgroundColor": "orangered",
          "secondaryTextColor": "black",
          "terciaryBackgroundColor": "#423434",
        }
      }
    >
      <ThemeProvider
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "name": "Red",
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "activatedOpacity": 0.12,
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "disabledOpacity": 0.38,
                "focus": "rgba(0, 0, 0, 0.12)",
                "focusOpacity": 0.12,
                "hover": "rgba(0, 0, 0, 0.04)",
                "hoverOpacity": 0.04,
                "selected": "rgba(0, 0, 0, 0.08)",
                "selectedOpacity": 0.08,
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "info": Object {
                "contrastText": "#fff",
                "dark": "#1976d2",
                "light": "#64b5f6",
                "main": "#2196f3",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#303f9f",
                "light": "#7986cb",
                "main": "#3f51b5",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "success": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#388e3c",
                "light": "#81c784",
                "main": "#4caf50",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#f57c00",
                "light": "#ffb74d",
                "main": "#ff9800",
              },
            },
            "primaryBackgroundColor": "red",
            "primaryTextColor": "white",
            "props": Object {},
            "secondaryBackgroundColor": "orangered",
            "secondaryTextColor": "black",
            "shadows": Array [
              "none",
              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": [Function],
            "terciaryBackgroundColor": "#423434",
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.43,
              },
              "button": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightBold": 700,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1.167,
              },
              "h2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1.2,
              },
              "h3": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.167,
              },
              "h4": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.235,
              },
              "h5": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.334,
              },
              "h6": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "htmlFontSize": 16,
              "overline": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subtitle1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "speedDial": 1050,
              "tooltip": 1500,
            },
            Symbol(mui.nested): false,
          }
        }
      >
        <HashRouter
          hashType="noslash"
        >
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
          >
            <AppSub>
              <Header
                onClick={[Function]}
              >
                <WithStyles(ForwardRef(AppBar))
                  className="makeStyles-appBar-1"
                  onClick={[Function]}
                >
                  <ForwardRef(AppBar)
                    className="makeStyles-appBar-1"
                    classes={
                      Object {
                        "colorDefault": "MuiAppBar-colorDefault",
                        "colorInherit": "MuiAppBar-colorInherit",
                        "colorPrimary": "MuiAppBar-colorPrimary",
                        "colorSecondary": "MuiAppBar-colorSecondary",
                        "colorTransparent": "MuiAppBar-colorTransparent",
                        "positionAbsolute": "MuiAppBar-positionAbsolute",
                        "positionFixed": "MuiAppBar-positionFixed",
                        "positionRelative": "MuiAppBar-positionRelative",
                        "positionStatic": "MuiAppBar-positionStatic",
                        "positionSticky": "MuiAppBar-positionSticky",
                        "root": "MuiAppBar-root",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(Paper))
                      className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-1 mui-fixed"
                      component="header"
                      elevation={4}
                      onClick={[Function]}
                      square={true}
                    >
                      <ForwardRef(Paper)
                        className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-1 mui-fixed"
                        classes={
                          Object {
                            "elevation0": "MuiPaper-elevation0",
                            "elevation1": "MuiPaper-elevation1",
                            "elevation10": "MuiPaper-elevation10",
                            "elevation11": "MuiPaper-elevation11",
                            "elevation12": "MuiPaper-elevation12",
                            "elevation13": "MuiPaper-elevation13",
                            "elevation14": "MuiPaper-elevation14",
                            "elevation15": "MuiPaper-elevation15",
                            "elevation16": "MuiPaper-elevation16",
                            "elevation17": "MuiPaper-elevation17",
                            "elevation18": "MuiPaper-elevation18",
                            "elevation19": "MuiPaper-elevation19",
                            "elevation2": "MuiPaper-elevation2",
                            "elevation20": "MuiPaper-elevation20",
                            "elevation21": "MuiPaper-elevation21",
                            "elevation22": "MuiPaper-elevation22",
                            "elevation23": "MuiPaper-elevation23",
                            "elevation24": "MuiPaper-elevation24",
                            "elevation3": "MuiPaper-elevation3",
                            "elevation4": "MuiPaper-elevation4",
                            "elevation5": "MuiPaper-elevation5",
                            "elevation6": "MuiPaper-elevation6",
                            "elevation7": "MuiPaper-elevation7",
                            "elevation8": "MuiPaper-elevation8",
                            "elevation9": "MuiPaper-elevation9",
                            "outlined": "MuiPaper-outlined",
                            "root": "MuiPaper-root",
                            "rounded": "MuiPaper-rounded",
                          }
                        }
                        component="header"
                        elevation={4}
                        onClick={[Function]}
                        square={true}
                      >
                        <header
                          className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-1 mui-fixed MuiPaper-elevation4"
                          onClick={[Function]}
                        >
                          <styled.h1>
                            <h1
                              className="sc-gsTCUz bnSNfe"
                              color="white"
                            >
                              Red Tetris
                            </h1>
                          </styled.h1>
                        </header>
                      </ForwardRef(Paper)>
                    </WithStyles(ForwardRef(Paper))>
                  </ForwardRef(AppBar)>
                </WithStyles(ForwardRef(AppBar))>
                <styled.div
                  height="10vh"
                  minHeight="60px"
                  width="100%"
                >
                  <div
                    className="sc-bdfBwQ jRZqUG"
                    height="10vh"
                    width="100%"
                  />
                </styled.div>
              </Header>
              <WelcomeModal>
                <_default
                  onKeyUp={[Function]}
                  open={true}
                >
                  <ForwardRef(Modal)
                    className="makeStyles-modal-2"
                    onKeyUp={[Function]}
                    open={true}
                  >
                    <ForwardRef(Portal)
                      disablePortal={false}
                    >
                      <Portal
                        containerInfo={
                          <body
                            style="padding-right: 0px; overflow: hidden;"
                          >
                            <div
                              class="makeStyles-modal-2"
                              role="presentation"
                              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                            >
                              <div
                                aria-hidden="true"
                                style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: rgba(0, 0, 0, 0.5);"
                              />
                              <div
                                data-test="sentinelStart"
                                tabindex="0"
                              />
                              <div
                                class="sc-iBPRYJ hwsYte"
                                color="white"
                                tabindex="-1"
                              >
                                <div
                                  backgroundcolor="red"
                                  class="MuiToolbar-root MuiToolbar-regular sc-fubCfw kjvevE MuiToolbar-gutters"
                                >
                                  <h2
                                    class="sc-gKsewC yOXPs"
                                    color="white"
                                    font-weight="normal"
                                  >
                                    Choose my username
                                  </h2>
                                </div>
                                <div
                                  class="sc-iJuUWI kCERUz"
                                >
                                  <div
                                    class="MuiFormControl-root MuiTextField-root makeStyles-textField-21"
                                  >
                                    <label
                                      class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                      data-shrink="false"
                                    >
                                      My username
                                    </label>
                                    <div
                                      class="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldInput-22 MuiInputBase-formControl"
                                    >
                                      <input
                                        aria-invalid="false"
                                        class="MuiInputBase-input MuiOutlinedInput-input"
                                        type="text"
                                        value=""
                                      />
                                      <fieldset
                                        aria-hidden="true"
                                        class="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                      >
                                        <legend
                                          class="PrivateNotchedOutline-legendLabelled-10"
                                        >
                                          <span>
                                            My username
                                          </span>
                                        </legend>
                                      </fieldset>
                                    </div>
                                    
                                  </div>
                                </div>
                                <div
                                  class="sc-giIncl igHwmW"
                                >
                                  <button
                                    class="MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-button-23 Mui-disabled Mui-disabled"
                                    disabled=""
                                    tabindex="-1"
                                    type="button"
                                  >
                                    <span
                                      class="MuiButton-label"
                                    >
                                      Begin
                                    </span>
                                  </button>
                                </div>
                              </div>
                              <div
                                data-test="sentinelEnd"
                                tabindex="0"
                              />
                            </div>
                          </body>
                        }
                      >
                        <div
                          className="makeStyles-modal-2"
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="presentation"
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                              "zIndex": 1300,
                            }
                          }
                        >
                          <ForwardRef(SimpleBackdrop)
                            onClick={[Function]}
                            open={true}
                          >
                            <div
                              aria-hidden={true}
                              onClick={[Function]}
                              style={
                                Object {
                                  "WebkitTapHighlightColor": "transparent",
                                  "backgroundColor": "rgba(0, 0, 0, 0.5)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                  "zIndex": -1,
                                }
                              }
                            />
                          </ForwardRef(SimpleBackdrop)>
                          <Unstable_TrapFocus
                            disableAutoFocus={false}
                            disableEnforceFocus={false}
                            disableRestoreFocus={false}
                            getDoc={[Function]}
                            isEnabled={[Function]}
                            open={true}
                          >
                            <div
                              data-test="sentinelStart"
                              tabIndex={0}
                            />
                            <styled.div
                              tabIndex="-1"
                            >
                              <div
                                className="sc-iBPRYJ hwsYte"
                                color="white"
                                tabIndex="-1"
                              >
                                <Content
                                  input=""
                                  setInput={[Function]}
                                >
                                  <Styled(WithStyles(ForwardRef(Toolbar)))>
                                    <WithStyles(ForwardRef(Toolbar))
                                      backgroundcolor="red"
                                      className="sc-fubCfw kjvevE"
                                    >
                                      <ForwardRef(Toolbar)
                                        backgroundcolor="red"
                                        className="sc-fubCfw kjvevE"
                                        classes={
                                          Object {
                                            "dense": "MuiToolbar-dense",
                                            "gutters": "MuiToolbar-gutters",
                                            "regular": "MuiToolbar-regular",
                                            "root": "MuiToolbar-root",
                                          }
                                        }
                                      >
                                        <div
                                          backgroundcolor="red"
                                          className="MuiToolbar-root MuiToolbar-regular sc-fubCfw kjvevE MuiToolbar-gutters"
                                        >
                                          <styled.h2
                                            fontWeight="normal"
                                          >
                                            <h2
                                              className="sc-gKsewC yOXPs"
                                              color="white"
                                              fontWeight="normal"
                                            >
                                              Choose my username
                                            </h2>
                                          </styled.h2>
                                        </div>
                                      </ForwardRef(Toolbar)>
                                    </WithStyles(ForwardRef(Toolbar))>
                                  </Styled(WithStyles(ForwardRef(Toolbar)))>
                                  <styled.div>
                                    <div
                                      className="sc-iJuUWI kCERUz"
                                    >
                                      <_default
                                        error=""
                                        label="My username"
                                        onChange={[Function]}
                                        value=""
                                        variant="outlined"
                                      >
                                        <OutlinedTextField
                                          color="primary"
                                          error={false}
                                          helperText=""
                                          label="My username"
                                          onChange={[Function]}
                                          type="text"
                                          value=""
                                          width="200px"
                                        >
                                          <WithStyles(ForwardRef(TextField))
                                            InputProps={
                                              Object {
                                                "className": "makeStyles-textFieldInput-22",
                                              }
                                            }
                                            className="makeStyles-textField-21"
                                            error={false}
                                            helperText=""
                                            label="My username"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                            variant="outlined"
                                          >
                                            <ForwardRef(TextField)
                                              InputProps={
                                                Object {
                                                  "className": "makeStyles-textFieldInput-22",
                                                }
                                              }
                                              className="makeStyles-textField-21"
                                              classes={
                                                Object {
                                                  "root": "MuiTextField-root",
                                                }
                                              }
                                              error={false}
                                              helperText=""
                                              label="My username"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                              variant="outlined"
                                            >
                                              <WithStyles(ForwardRef(FormControl))
                                                className="MuiTextField-root makeStyles-textField-21"
                                                color="primary"
                                                disabled={false}
                                                error={false}
                                                fullWidth={false}
                                                required={false}
                                                variant="outlined"
                                              >
                                                <ForwardRef(FormControl)
                                                  className="MuiTextField-root makeStyles-textField-21"
                                                  classes={
                                                    Object {
                                                      "fullWidth": "MuiFormControl-fullWidth",
                                                      "marginDense": "MuiFormControl-marginDense",
                                                      "marginNormal": "MuiFormControl-marginNormal",
                                                      "root": "MuiFormControl-root",
                                                    }
                                                  }
                                                  color="primary"
                                                  disabled={false}
                                                  error={false}
                                                  fullWidth={false}
                                                  required={false}
                                                  variant="outlined"
                                                >
                                                  <div
                                                    className="MuiFormControl-root MuiTextField-root makeStyles-textField-21"
                                                  >
                                                    <WithStyles(ForwardRef(InputLabel))>
                                                      <ForwardRef(InputLabel)
                                                        classes={
                                                          Object {
                                                            "animated": "MuiInputLabel-animated",
                                                            "asterisk": "MuiInputLabel-asterisk",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "filled": "MuiInputLabel-filled",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInputLabel-formControl",
                                                            "marginDense": "MuiInputLabel-marginDense",
                                                            "outlined": "MuiInputLabel-outlined",
                                                            "required": "Mui-required",
                                                            "root": "MuiInputLabel-root",
                                                            "shrink": "MuiInputLabel-shrink",
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(FormLabel))
                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                          classes={
                                                            Object {
                                                              "asterisk": "MuiInputLabel-asterisk",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "required": "Mui-required",
                                                            }
                                                          }
                                                          data-shrink={false}
                                                        >
                                                          <ForwardRef(FormLabel)
                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                            classes={
                                                              Object {
                                                                "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                "error": "Mui-error Mui-error",
                                                                "filled": "MuiFormLabel-filled",
                                                                "focused": "Mui-focused Mui-focused",
                                                                "required": "Mui-required Mui-required",
                                                                "root": "MuiFormLabel-root",
                                                              }
                                                            }
                                                            data-shrink={false}
                                                          >
                                                            <label
                                                              className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                              data-shrink={false}
                                                            >
                                                              My username
                                                            </label>
                                                          </ForwardRef(FormLabel)>
                                                        </WithStyles(ForwardRef(FormLabel))>
                                                      </ForwardRef(InputLabel)>
                                                    </WithStyles(ForwardRef(InputLabel))>
                                                    <WithStyles(ForwardRef(OutlinedInput))
                                                      autoFocus={false}
                                                      className="makeStyles-textFieldInput-22"
                                                      fullWidth={false}
                                                      label={
                                                        <React.Fragment>
                                                          My username
                                                        </React.Fragment>
                                                      }
                                                      multiline={false}
                                                      onChange={[Function]}
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(OutlinedInput)
                                                        autoFocus={false}
                                                        className="makeStyles-textFieldInput-22"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                            "adornedStart": "MuiOutlinedInput-adornedStart",
                                                            "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "input": "MuiOutlinedInput-input",
                                                            "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                            "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                            "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                            "marginDense": "MuiOutlinedInput-marginDense",
                                                            "multiline": "MuiOutlinedInput-multiline",
                                                            "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                            "root": "MuiOutlinedInput-root",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        label={
                                                          <React.Fragment>
                                                            My username
                                                          </React.Fragment>
                                                        }
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        type="text"
                                                        value=""
                                                      >
                                                        <WithStyles(ForwardRef(InputBase))
                                                          autoFocus={false}
                                                          className="makeStyles-textFieldInput-22"
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                              "adornedStart": "MuiOutlinedInput-adornedStart",
                                                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "input": "MuiOutlinedInput-input",
                                                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                              "marginDense": "MuiOutlinedInput-marginDense",
                                                              "multiline": "MuiOutlinedInput-multiline",
                                                              "notchedOutline": null,
                                                              "root": "MuiOutlinedInput-root",
                                                            }
                                                          }
                                                          fullWidth={false}
                                                          inputComponent="input"
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          renderSuffix={[Function]}
                                                          type="text"
                                                          value=""
                                                        >
                                                          <ForwardRef(InputBase)
                                                            autoFocus={false}
                                                            className="makeStyles-textFieldInput-22"
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                "error": "Mui-error Mui-error",
                                                                "focused": "Mui-focused Mui-focused",
                                                                "formControl": "MuiInputBase-formControl",
                                                                "fullWidth": "MuiInputBase-fullWidth",
                                                                "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            fullWidth={false}
                                                            inputComponent="input"
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            renderSuffix={[Function]}
                                                            type="text"
                                                            value=""
                                                          >
                                                            <div
                                                              className="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldInput-22 MuiInputBase-formControl"
                                                              onClick={[Function]}
                                                            >
                                                              <input
                                                                aria-invalid={false}
                                                                autoFocus={false}
                                                                className="MuiInputBase-input MuiOutlinedInput-input"
                                                                disabled={false}
                                                                onAnimationStart={[Function]}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                required={false}
                                                                type="text"
                                                                value=""
                                                              />
                                                              <WithStyles(ForwardRef(NotchedOutline))
                                                                className="MuiOutlinedInput-notchedOutline"
                                                                label={
                                                                  <React.Fragment>
                                                                    My username
                                                                  </React.Fragment>
                                                                }
                                                                labelWidth={0}
                                                                notched={false}
                                                              >
                                                                <ForwardRef(NotchedOutline)
                                                                  className="MuiOutlinedInput-notchedOutline"
                                                                  classes={
                                                                    Object {
                                                                      "legend": "PrivateNotchedOutline-legend-9",
                                                                      "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                                                      "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                                                      "root": "PrivateNotchedOutline-root-8",
                                                                    }
                                                                  }
                                                                  label={
                                                                    <React.Fragment>
                                                                      My username
                                                                    </React.Fragment>
                                                                  }
                                                                  labelWidth={0}
                                                                  notched={false}
                                                                >
                                                                  <fieldset
                                                                    aria-hidden={true}
                                                                    className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                                                  >
                                                                    <legend
                                                                      className="PrivateNotchedOutline-legendLabelled-10"
                                                                    >
                                                                      <span>
                                                                        My username
                                                                      </span>
                                                                    </legend>
                                                                  </fieldset>
                                                                </ForwardRef(NotchedOutline)>
                                                              </WithStyles(ForwardRef(NotchedOutline))>
                                                            </div>
                                                          </ForwardRef(InputBase)>
                                                        </WithStyles(ForwardRef(InputBase))>
                                                      </ForwardRef(OutlinedInput)>
                                                    </WithStyles(ForwardRef(OutlinedInput))>
                                                  </div>
                                                </ForwardRef(FormControl)>
                                              </WithStyles(ForwardRef(FormControl))>
                                            </ForwardRef(TextField)>
                                          </WithStyles(ForwardRef(TextField))>
                                        </OutlinedTextField>
                                      </_default>
                                    </div>
                                  </styled.div>
                                  <styled.div>
                                    <div
                                      className="sc-giIncl igHwmW"
                                    >
                                      <_default
                                        disabled={true}
                                        onClick={[Function]}
                                        variant="contained"
                                      >
                                        <ContainedButton
                                          disabled={true}
                                          onClick={[Function]}
                                        >
                                          <WithStyles(ForwardRef(Button))
                                            className="makeStyles-button-23"
                                            disabled={true}
                                            onClick={[Function]}
                                            variant="contained"
                                          >
                                            <ForwardRef(Button)
                                              className="makeStyles-button-23"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit",
                                                  "contained": "MuiButton-contained",
                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                  "disableElevation": "MuiButton-disableElevation",
                                                  "disabled": "Mui-disabled",
                                                  "endIcon": "MuiButton-endIcon",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "fullWidth": "MuiButton-fullWidth",
                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                  "label": "MuiButton-label",
                                                  "outlined": "MuiButton-outlined",
                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                  "root": "MuiButton-root",
                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                  "startIcon": "MuiButton-startIcon",
                                                  "text": "MuiButton-text",
                                                  "textPrimary": "MuiButton-textPrimary",
                                                  "textSecondary": "MuiButton-textSecondary",
                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                }
                                              }
                                              disabled={true}
                                              onClick={[Function]}
                                              variant="contained"
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiButton-root MuiButton-contained makeStyles-button-23 Mui-disabled"
                                                component="button"
                                                disabled={true}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiButton-root MuiButton-contained makeStyles-button-23 Mui-disabled"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="button"
                                                  disabled={true}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-button-23 Mui-disabled Mui-disabled"
                                                    disabled={true}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={-1}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label"
                                                    >
                                                      Begin
                                                    </span>
                                                  </button>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(Button)>
                                          </WithStyles(ForwardRef(Button))>
                                        </ContainedButton>
                                      </_default>
                                    </div>
                                  </styled.div>
                                </Content>
                              </div>
                            </styled.div>
                            <div
                              data-test="sentinelEnd"
                              tabIndex={0}
                            />
                          </Unstable_TrapFocus>
                        </div>
                      </Portal>
                    </ForwardRef(Portal)>
                  </ForwardRef(Modal)>
                </_default>
              </WelcomeModal>
              <Switch>
                <Route
                  computedMatch={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                  exact={true}
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  path="/"
                >
                  <Home>
                    <styled.div>
                      <div
                        className="sc-kstrdz btfrxf"
                      >
                        <Rooms>
                          <styled.div>
                            <div
                              className="sc-dlfnbm bgSAyL"
                            >
                              <CardHeader
                                iconName="gamepad"
                                label="Search"
                                onChange={[Function]}
                                title="Rooms"
                                value=""
                              >
                                <WithStyles(ForwardRef(AppBar))
                                  className="makeStyles-appBar-3"
                                  position="static"
                                >
                                  <ForwardRef(AppBar)
                                    className="makeStyles-appBar-3"
                                    classes={
                                      Object {
                                        "colorDefault": "MuiAppBar-colorDefault",
                                        "colorInherit": "MuiAppBar-colorInherit",
                                        "colorPrimary": "MuiAppBar-colorPrimary",
                                        "colorSecondary": "MuiAppBar-colorSecondary",
                                        "colorTransparent": "MuiAppBar-colorTransparent",
                                        "positionAbsolute": "MuiAppBar-positionAbsolute",
                                        "positionFixed": "MuiAppBar-positionFixed",
                                        "positionRelative": "MuiAppBar-positionRelative",
                                        "positionStatic": "MuiAppBar-positionStatic",
                                        "positionSticky": "MuiAppBar-positionSticky",
                                        "root": "MuiAppBar-root",
                                      }
                                    }
                                    position="static"
                                  >
                                    <WithStyles(ForwardRef(Paper))
                                      className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary makeStyles-appBar-3"
                                      component="header"
                                      elevation={4}
                                      square={true}
                                    >
                                      <ForwardRef(Paper)
                                        className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary makeStyles-appBar-3"
                                        classes={
                                          Object {
                                            "elevation0": "MuiPaper-elevation0",
                                            "elevation1": "MuiPaper-elevation1",
                                            "elevation10": "MuiPaper-elevation10",
                                            "elevation11": "MuiPaper-elevation11",
                                            "elevation12": "MuiPaper-elevation12",
                                            "elevation13": "MuiPaper-elevation13",
                                            "elevation14": "MuiPaper-elevation14",
                                            "elevation15": "MuiPaper-elevation15",
                                            "elevation16": "MuiPaper-elevation16",
                                            "elevation17": "MuiPaper-elevation17",
                                            "elevation18": "MuiPaper-elevation18",
                                            "elevation19": "MuiPaper-elevation19",
                                            "elevation2": "MuiPaper-elevation2",
                                            "elevation20": "MuiPaper-elevation20",
                                            "elevation21": "MuiPaper-elevation21",
                                            "elevation22": "MuiPaper-elevation22",
                                            "elevation23": "MuiPaper-elevation23",
                                            "elevation24": "MuiPaper-elevation24",
                                            "elevation3": "MuiPaper-elevation3",
                                            "elevation4": "MuiPaper-elevation4",
                                            "elevation5": "MuiPaper-elevation5",
                                            "elevation6": "MuiPaper-elevation6",
                                            "elevation7": "MuiPaper-elevation7",
                                            "elevation8": "MuiPaper-elevation8",
                                            "elevation9": "MuiPaper-elevation9",
                                            "outlined": "MuiPaper-outlined",
                                            "root": "MuiPaper-root",
                                            "rounded": "MuiPaper-rounded",
                                          }
                                        }
                                        component="header"
                                        elevation={4}
                                        square={true}
                                      >
                                        <header
                                          className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary makeStyles-appBar-3 MuiPaper-elevation4"
                                        >
                                          <WithStyles(ForwardRef(Toolbar))
                                            className="makeStyles-toolbar-4"
                                          >
                                            <ForwardRef(Toolbar)
                                              className="makeStyles-toolbar-4"
                                              classes={
                                                Object {
                                                  "dense": "MuiToolbar-dense",
                                                  "gutters": "MuiToolbar-gutters",
                                                  "regular": "MuiToolbar-regular",
                                                  "root": "MuiToolbar-root",
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiToolbar-root MuiToolbar-regular makeStyles-toolbar-4 MuiToolbar-gutters"
                                              >
                                                <styled.span>
                                                  <span
                                                    className="sc-eCssSg dUrGfF"
                                                    color="white"
                                                  >
                                                    <Icon
                                                      marginRight="15px"
                                                      type="gamepad"
                                                    >
                                                      <WithStyles(ForwardRef(Tooltip))
                                                        title=""
                                                      >
                                                        <ForwardRef(Tooltip)
                                                          classes={
                                                            Object {
                                                              "arrow": "MuiTooltip-arrow",
                                                              "popper": "MuiTooltip-popper",
                                                              "popperArrow": "MuiTooltip-popperArrow",
                                                              "popperInteractive": "MuiTooltip-popperInteractive",
                                                              "tooltip": "MuiTooltip-tooltip",
                                                              "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                              "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                              "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                              "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                              "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                              "touch": "MuiTooltip-touch",
                                                            }
                                                          }
                                                          title=""
                                                        >
                                                          <ForwardRef(VideogameAssetIcon)
                                                            aria-describedby={null}
                                                            className="makeStyles-icon-5"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseOver={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchStart={[Function]}
                                                            title=""
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              aria-describedby={null}
                                                              className="makeStyles-icon-5"
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseOver={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchStart={[Function]}
                                                              title=""
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                aria-describedby={null}
                                                                className="makeStyles-icon-5"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseOver={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchStart={[Function]}
                                                                title=""
                                                              >
                                                                <svg
                                                                  aria-describedby={null}
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root makeStyles-icon-5"
                                                                  focusable="false"
                                                                  onBlur={[Function]}
                                                                  onFocus={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseOver={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  title=""
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-10 7H8v3H6v-3H3v-2h3V8h2v3h3v2zm4.5 2c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4-3c-.83 0-1.5-.67-1.5-1.5S18.67 9 19.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(VideogameAssetIcon)>
                                                          <ForwardRef(Popper)
                                                            anchorEl={
                                                              <svg
                                                                aria-hidden="true"
                                                                class="MuiSvgIcon-root makeStyles-icon-5"
                                                                focusable="false"
                                                                title=""
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-10 7H8v3H6v-3H3v-2h3V8h2v3h3v2zm4.5 2c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4-3c-.83 0-1.5-.67-1.5-1.5S18.67 9 19.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
                                                                />
                                                              </svg>
                                                            }
                                                            className="MuiTooltip-popper"
                                                            id={null}
                                                            open={false}
                                                            placement="bottom"
                                                            popperOptions={
                                                              Object {
                                                                "modifiers": Object {
                                                                  "arrow": Object {
                                                                    "element": null,
                                                                    "enabled": false,
                                                                  },
                                                                },
                                                              }
                                                            }
                                                            transition={true}
                                                          />
                                                        </ForwardRef(Tooltip)>
                                                      </WithStyles(ForwardRef(Tooltip))>
                                                    </Icon>
                                                    <styled.h2>
                                                      <h2
                                                        className="sc-jSgupP"
                                                      >
                                                        Rooms
                                                      </h2>
                                                    </styled.h2>
                                                  </span>
                                                </styled.span>
                                                <_default
                                                  color="secondary"
                                                  hide={false}
                                                  label="Search"
                                                  onChange={[Function]}
                                                  value=""
                                                  variant="outlined"
                                                  width="180px"
                                                >
                                                  <OutlinedTextField
                                                    color="secondary"
                                                    error={false}
                                                    label="Search"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                    width="180px"
                                                  >
                                                    <WithStyles(ForwardRef(TextField))
                                                      InputProps={
                                                        Object {
                                                          "className": "makeStyles-textFieldInput-7",
                                                        }
                                                      }
                                                      className="makeStyles-textField-6"
                                                      error={false}
                                                      label="Search"
                                                      onChange={[Function]}
                                                      type="text"
                                                      value=""
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(TextField)
                                                        InputProps={
                                                          Object {
                                                            "className": "makeStyles-textFieldInput-7",
                                                          }
                                                        }
                                                        className="makeStyles-textField-6"
                                                        classes={
                                                          Object {
                                                            "root": "MuiTextField-root",
                                                          }
                                                        }
                                                        error={false}
                                                        label="Search"
                                                        onChange={[Function]}
                                                        type="text"
                                                        value=""
                                                        variant="outlined"
                                                      >
                                                        <WithStyles(ForwardRef(FormControl))
                                                          className="MuiTextField-root makeStyles-textField-6"
                                                          color="primary"
                                                          disabled={false}
                                                          error={false}
                                                          fullWidth={false}
                                                          required={false}
                                                          variant="outlined"
                                                        >
                                                          <ForwardRef(FormControl)
                                                            className="MuiTextField-root makeStyles-textField-6"
                                                            classes={
                                                              Object {
                                                                "fullWidth": "MuiFormControl-fullWidth",
                                                                "marginDense": "MuiFormControl-marginDense",
                                                                "marginNormal": "MuiFormControl-marginNormal",
                                                                "root": "MuiFormControl-root",
                                                              }
                                                            }
                                                            color="primary"
                                                            disabled={false}
                                                            error={false}
                                                            fullWidth={false}
                                                            required={false}
                                                            variant="outlined"
                                                          >
                                                            <div
                                                              className="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                                                            >
                                                              <WithStyles(ForwardRef(InputLabel))>
                                                                <ForwardRef(InputLabel)
                                                                  classes={
                                                                    Object {
                                                                      "animated": "MuiInputLabel-animated",
                                                                      "asterisk": "MuiInputLabel-asterisk",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "filled": "MuiInputLabel-filled",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInputLabel-formControl",
                                                                      "marginDense": "MuiInputLabel-marginDense",
                                                                      "outlined": "MuiInputLabel-outlined",
                                                                      "required": "Mui-required",
                                                                      "root": "MuiInputLabel-root",
                                                                      "shrink": "MuiInputLabel-shrink",
                                                                    }
                                                                  }
                                                                >
                                                                  <WithStyles(ForwardRef(FormLabel))
                                                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                    classes={
                                                                      Object {
                                                                        "asterisk": "MuiInputLabel-asterisk",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "required": "Mui-required",
                                                                      }
                                                                    }
                                                                    data-shrink={false}
                                                                  >
                                                                    <ForwardRef(FormLabel)
                                                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                      classes={
                                                                        Object {
                                                                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                          "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "filled": "MuiFormLabel-filled",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "required": "Mui-required Mui-required",
                                                                          "root": "MuiFormLabel-root",
                                                                        }
                                                                      }
                                                                      data-shrink={false}
                                                                    >
                                                                      <label
                                                                        className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                        data-shrink={false}
                                                                      >
                                                                        Search
                                                                      </label>
                                                                    </ForwardRef(FormLabel)>
                                                                  </WithStyles(ForwardRef(FormLabel))>
                                                                </ForwardRef(InputLabel)>
                                                              </WithStyles(ForwardRef(InputLabel))>
                                                              <WithStyles(ForwardRef(OutlinedInput))
                                                                autoFocus={false}
                                                                className="makeStyles-textFieldInput-7"
                                                                fullWidth={false}
                                                                label={
                                                                  <React.Fragment>
                                                                    Search
                                                                  </React.Fragment>
                                                                }
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <ForwardRef(OutlinedInput)
                                                                  autoFocus={false}
                                                                  className="makeStyles-textFieldInput-7"
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "input": "MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                      "marginDense": "MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiOutlinedInput-multiline",
                                                                      "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                      "root": "MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={false}
                                                                  label={
                                                                    <React.Fragment>
                                                                      Search
                                                                    </React.Fragment>
                                                                  }
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <WithStyles(ForwardRef(InputBase))
                                                                    autoFocus={false}
                                                                    className="makeStyles-textFieldInput-7"
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                        "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "input": "MuiOutlinedInput-input",
                                                                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                        "marginDense": "MuiOutlinedInput-marginDense",
                                                                        "multiline": "MuiOutlinedInput-multiline",
                                                                        "notchedOutline": null,
                                                                        "root": "MuiOutlinedInput-root",
                                                                      }
                                                                    }
                                                                    fullWidth={false}
                                                                    inputComponent="input"
                                                                    multiline={false}
                                                                    onChange={[Function]}
                                                                    renderSuffix={[Function]}
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <ForwardRef(InputBase)
                                                                      autoFocus={false}
                                                                      className="makeStyles-textFieldInput-7"
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                          "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                          "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "formControl": "MuiInputBase-formControl",
                                                                          "fullWidth": "MuiInputBase-fullWidth",
                                                                          "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                          "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                          "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                          "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                          "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                        }
                                                                      }
                                                                      fullWidth={false}
                                                                      inputComponent="input"
                                                                      multiline={false}
                                                                      onChange={[Function]}
                                                                      renderSuffix={[Function]}
                                                                      type="text"
                                                                      value=""
                                                                    >
                                                                      <div
                                                                        className="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldInput-7 MuiInputBase-formControl"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <input
                                                                          aria-invalid={false}
                                                                          autoFocus={false}
                                                                          className="MuiInputBase-input MuiOutlinedInput-input"
                                                                          disabled={false}
                                                                          onAnimationStart={[Function]}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          type="text"
                                                                          value=""
                                                                        />
                                                                        <WithStyles(ForwardRef(NotchedOutline))
                                                                          className="MuiOutlinedInput-notchedOutline"
                                                                          label={
                                                                            <React.Fragment>
                                                                              Search
                                                                            </React.Fragment>
                                                                          }
                                                                          labelWidth={0}
                                                                          notched={false}
                                                                        >
                                                                          <ForwardRef(NotchedOutline)
                                                                            className="MuiOutlinedInput-notchedOutline"
                                                                            classes={
                                                                              Object {
                                                                                "legend": "PrivateNotchedOutline-legend-9",
                                                                                "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                                                                "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                                                                "root": "PrivateNotchedOutline-root-8",
                                                                              }
                                                                            }
                                                                            label={
                                                                              <React.Fragment>
                                                                                Search
                                                                              </React.Fragment>
                                                                            }
                                                                            labelWidth={0}
                                                                            notched={false}
                                                                          >
                                                                            <fieldset
                                                                              aria-hidden={true}
                                                                              className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                                                            >
                                                                              <legend
                                                                                className="PrivateNotchedOutline-legendLabelled-10"
                                                                              >
                                                                                <span>
                                                                                  Search
                                                                                </span>
                                                                              </legend>
                                                                            </fieldset>
                                                                          </ForwardRef(NotchedOutline)>
                                                                        </WithStyles(ForwardRef(NotchedOutline))>
                                                                      </div>
                                                                    </ForwardRef(InputBase)>
                                                                  </WithStyles(ForwardRef(InputBase))>
                                                                </ForwardRef(OutlinedInput)>
                                                              </WithStyles(ForwardRef(OutlinedInput))>
                                                            </div>
                                                          </ForwardRef(FormControl)>
                                                        </WithStyles(ForwardRef(FormControl))>
                                                      </ForwardRef(TextField)>
                                                    </WithStyles(ForwardRef(TextField))>
                                                  </OutlinedTextField>
                                                </_default>
                                              </div>
                                            </ForwardRef(Toolbar)>
                                          </WithStyles(ForwardRef(Toolbar))>
                                        </header>
                                      </ForwardRef(Paper)>
                                    </WithStyles(ForwardRef(Paper))>
                                  </ForwardRef(AppBar)>
                                </WithStyles(ForwardRef(AppBar))>
                              </CardHeader>
                              <RoomsTable
                                rooms={Array []}
                                selected={Object {}}
                                setSelected={[Function]}
                              >
                                <styled.div>
                                  <div
                                    className="sc-dQppl bikRgb"
                                  >
                                    <styled.div>
                                      <div
                                        className="sc-bqyKva iTAZph"
                                      >
                                        <styled.div
                                          fontWeight="bold"
                                          width="240px"
                                        >
                                          <div
                                            className="sc-crrsfI fsyZQF"
                                            color="white"
                                            fontWeight="bold"
                                            width="240px"
                                          >
                                            Name
                                          </div>
                                        </styled.div>
                                        <styled.div
                                          fontWeight="bold"
                                          width="80px"
                                        >
                                          <div
                                            className="sc-crrsfI jvfOaP"
                                            color="white"
                                            fontWeight="bold"
                                            width="80px"
                                          >
                                            Players
                                          </div>
                                        </styled.div>
                                        <styled.div
                                          fontWeight="bold"
                                          width="80px"
                                        >
                                          <div
                                            className="sc-crrsfI jvfOaP"
                                            color="white"
                                            fontWeight="bold"
                                            width="80px"
                                          >
                                            Viewers
                                          </div>
                                        </styled.div>
                                        <styled.div
                                          fontWeight="bold"
                                          width="100px"
                                        >
                                          <div
                                            className="sc-crrsfI ftgVyG"
                                            color="white"
                                            fontWeight="bold"
                                            width="100px"
                                          >
                                            Type
                                          </div>
                                        </styled.div>
                                      </div>
                                    </styled.div>
                                  </div>
                                </styled.div>
                              </RoomsTable>
                              <styled.div>
                                <div
                                  className="sc-hKgILt jeFPHV"
                                >
                                  <CreationButton>
                                    <_default
                                      onClick={[Function]}
                                      variant="outlined"
                                    >
                                      <OutlinedButton
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Button))
                                          className="makeStyles-button-12"
                                          onClick={[Function]}
                                          variant="outlined"
                                        >
                                          <ForwardRef(Button)
                                            className="makeStyles-button-12"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                "disableElevation": "MuiButton-disableElevation",
                                                "disabled": "Mui-disabled",
                                                "endIcon": "MuiButton-endIcon",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "startIcon": "MuiButton-startIcon",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                              }
                                            }
                                            onClick={[Function]}
                                            variant="outlined"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-outlined makeStyles-button-12"
                                              component="button"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-outlined makeStyles-button-12"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-outlined makeStyles-button-12"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    Create
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                      </OutlinedButton>
                                    </_default>
                                    <_default
                                      onClose={[Function]}
                                      onKeyUp={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Modal)
                                        className="makeStyles-modal-13"
                                        onClose={[Function]}
                                        onKeyUp={[Function]}
                                        open={false}
                                      />
                                    </_default>
                                  </CreationButton>
                                  <JoiningButton
                                    selected={Object {}}
                                  >
                                    <_default
                                      disabled={true}
                                      onClick={[Function]}
                                      variant="outlined"
                                    >
                                      <OutlinedButton
                                        disabled={true}
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Button))
                                          className="makeStyles-button-14"
                                          disabled={true}
                                          onClick={[Function]}
                                          variant="outlined"
                                        >
                                          <ForwardRef(Button)
                                            className="makeStyles-button-14"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                "disableElevation": "MuiButton-disableElevation",
                                                "disabled": "Mui-disabled",
                                                "endIcon": "MuiButton-endIcon",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "startIcon": "MuiButton-startIcon",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                              }
                                            }
                                            disabled={true}
                                            onClick={[Function]}
                                            variant="outlined"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-outlined makeStyles-button-14 Mui-disabled"
                                              component="button"
                                              disabled={true}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-outlined makeStyles-button-14 Mui-disabled"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                disabled={true}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-outlined makeStyles-button-14 Mui-disabled Mui-disabled"
                                                  disabled={true}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={-1}
                                                  type="button"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    Join
                                                  </span>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                      </OutlinedButton>
                                    </_default>
                                    <_default
                                      onClose={[Function]}
                                      onKeyUp={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Modal)
                                        className="makeStyles-modal-15"
                                        onClose={[Function]}
                                        onKeyUp={[Function]}
                                        open={false}
                                      />
                                    </_default>
                                  </JoiningButton>
                                </div>
                              </styled.div>
                            </div>
                          </styled.div>
                        </Rooms>
                        <Scores>
                          <styled.div>
                            <div
                              className="sc-dlfnbm bgSAyL"
                            >
                              <CardHeader
                                iconName="gamepad"
                                label="Search"
                                onChange={[Function]}
                                title="Scores"
                                value=""
                              >
                                <WithStyles(ForwardRef(AppBar))
                                  className="makeStyles-appBar-16"
                                  position="static"
                                >
                                  <ForwardRef(AppBar)
                                    className="makeStyles-appBar-16"
                                    classes={
                                      Object {
                                        "colorDefault": "MuiAppBar-colorDefault",
                                        "colorInherit": "MuiAppBar-colorInherit",
                                        "colorPrimary": "MuiAppBar-colorPrimary",
                                        "colorSecondary": "MuiAppBar-colorSecondary",
                                        "colorTransparent": "MuiAppBar-colorTransparent",
                                        "positionAbsolute": "MuiAppBar-positionAbsolute",
                                        "positionFixed": "MuiAppBar-positionFixed",
                                        "positionRelative": "MuiAppBar-positionRelative",
                                        "positionStatic": "MuiAppBar-positionStatic",
                                        "positionSticky": "MuiAppBar-positionSticky",
                                        "root": "MuiAppBar-root",
                                      }
                                    }
                                    position="static"
                                  >
                                    <WithStyles(ForwardRef(Paper))
                                      className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary makeStyles-appBar-16"
                                      component="header"
                                      elevation={4}
                                      square={true}
                                    >
                                      <ForwardRef(Paper)
                                        className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary makeStyles-appBar-16"
                                        classes={
                                          Object {
                                            "elevation0": "MuiPaper-elevation0",
                                            "elevation1": "MuiPaper-elevation1",
                                            "elevation10": "MuiPaper-elevation10",
                                            "elevation11": "MuiPaper-elevation11",
                                            "elevation12": "MuiPaper-elevation12",
                                            "elevation13": "MuiPaper-elevation13",
                                            "elevation14": "MuiPaper-elevation14",
                                            "elevation15": "MuiPaper-elevation15",
                                            "elevation16": "MuiPaper-elevation16",
                                            "elevation17": "MuiPaper-elevation17",
                                            "elevation18": "MuiPaper-elevation18",
                                            "elevation19": "MuiPaper-elevation19",
                                            "elevation2": "MuiPaper-elevation2",
                                            "elevation20": "MuiPaper-elevation20",
                                            "elevation21": "MuiPaper-elevation21",
                                            "elevation22": "MuiPaper-elevation22",
                                            "elevation23": "MuiPaper-elevation23",
                                            "elevation24": "MuiPaper-elevation24",
                                            "elevation3": "MuiPaper-elevation3",
                                            "elevation4": "MuiPaper-elevation4",
                                            "elevation5": "MuiPaper-elevation5",
                                            "elevation6": "MuiPaper-elevation6",
                                            "elevation7": "MuiPaper-elevation7",
                                            "elevation8": "MuiPaper-elevation8",
                                            "elevation9": "MuiPaper-elevation9",
                                            "outlined": "MuiPaper-outlined",
                                            "root": "MuiPaper-root",
                                            "rounded": "MuiPaper-rounded",
                                          }
                                        }
                                        component="header"
                                        elevation={4}
                                        square={true}
                                      >
                                        <header
                                          className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary makeStyles-appBar-16 MuiPaper-elevation4"
                                        >
                                          <WithStyles(ForwardRef(Toolbar))
                                            className="makeStyles-toolbar-17"
                                          >
                                            <ForwardRef(Toolbar)
                                              className="makeStyles-toolbar-17"
                                              classes={
                                                Object {
                                                  "dense": "MuiToolbar-dense",
                                                  "gutters": "MuiToolbar-gutters",
                                                  "regular": "MuiToolbar-regular",
                                                  "root": "MuiToolbar-root",
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiToolbar-root MuiToolbar-regular makeStyles-toolbar-17 MuiToolbar-gutters"
                                              >
                                                <styled.span>
                                                  <span
                                                    className="sc-eCssSg dUrGfF"
                                                    color="white"
                                                  >
                                                    <Icon
                                                      marginRight="15px"
                                                      type="gamepad"
                                                    >
                                                      <WithStyles(ForwardRef(Tooltip))
                                                        title=""
                                                      >
                                                        <ForwardRef(Tooltip)
                                                          classes={
                                                            Object {
                                                              "arrow": "MuiTooltip-arrow",
                                                              "popper": "MuiTooltip-popper",
                                                              "popperArrow": "MuiTooltip-popperArrow",
                                                              "popperInteractive": "MuiTooltip-popperInteractive",
                                                              "tooltip": "MuiTooltip-tooltip",
                                                              "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                              "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                              "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                              "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                              "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                              "touch": "MuiTooltip-touch",
                                                            }
                                                          }
                                                          title=""
                                                        >
                                                          <ForwardRef(VideogameAssetIcon)
                                                            aria-describedby={null}
                                                            className="makeStyles-icon-18"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseOver={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchStart={[Function]}
                                                            title=""
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              aria-describedby={null}
                                                              className="makeStyles-icon-18"
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseOver={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchStart={[Function]}
                                                              title=""
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                aria-describedby={null}
                                                                className="makeStyles-icon-18"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseOver={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchStart={[Function]}
                                                                title=""
                                                              >
                                                                <svg
                                                                  aria-describedby={null}
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root makeStyles-icon-18"
                                                                  focusable="false"
                                                                  onBlur={[Function]}
                                                                  onFocus={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseOver={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  title=""
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-10 7H8v3H6v-3H3v-2h3V8h2v3h3v2zm4.5 2c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4-3c-.83 0-1.5-.67-1.5-1.5S18.67 9 19.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(VideogameAssetIcon)>
                                                          <ForwardRef(Popper)
                                                            anchorEl={
                                                              <svg
                                                                aria-hidden="true"
                                                                class="MuiSvgIcon-root makeStyles-icon-18"
                                                                focusable="false"
                                                                title=""
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-10 7H8v3H6v-3H3v-2h3V8h2v3h3v2zm4.5 2c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4-3c-.83 0-1.5-.67-1.5-1.5S18.67 9 19.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
                                                                />
                                                              </svg>
                                                            }
                                                            className="MuiTooltip-popper"
                                                            id={null}
                                                            open={false}
                                                            placement="bottom"
                                                            popperOptions={
                                                              Object {
                                                                "modifiers": Object {
                                                                  "arrow": Object {
                                                                    "element": null,
                                                                    "enabled": false,
                                                                  },
                                                                },
                                                              }
                                                            }
                                                            transition={true}
                                                          />
                                                        </ForwardRef(Tooltip)>
                                                      </WithStyles(ForwardRef(Tooltip))>
                                                    </Icon>
                                                    <styled.h2>
                                                      <h2
                                                        className="sc-jSgupP"
                                                      >
                                                        Scores
                                                      </h2>
                                                    </styled.h2>
                                                  </span>
                                                </styled.span>
                                                <_default
                                                  color="secondary"
                                                  hide={false}
                                                  label="Search"
                                                  onChange={[Function]}
                                                  value=""
                                                  variant="outlined"
                                                  width="180px"
                                                >
                                                  <OutlinedTextField
                                                    color="secondary"
                                                    error={false}
                                                    label="Search"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                    width="180px"
                                                  >
                                                    <WithStyles(ForwardRef(TextField))
                                                      InputProps={
                                                        Object {
                                                          "className": "makeStyles-textFieldInput-20",
                                                        }
                                                      }
                                                      className="makeStyles-textField-19"
                                                      error={false}
                                                      label="Search"
                                                      onChange={[Function]}
                                                      type="text"
                                                      value=""
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(TextField)
                                                        InputProps={
                                                          Object {
                                                            "className": "makeStyles-textFieldInput-20",
                                                          }
                                                        }
                                                        className="makeStyles-textField-19"
                                                        classes={
                                                          Object {
                                                            "root": "MuiTextField-root",
                                                          }
                                                        }
                                                        error={false}
                                                        label="Search"
                                                        onChange={[Function]}
                                                        type="text"
                                                        value=""
                                                        variant="outlined"
                                                      >
                                                        <WithStyles(ForwardRef(FormControl))
                                                          className="MuiTextField-root makeStyles-textField-19"
                                                          color="primary"
                                                          disabled={false}
                                                          error={false}
                                                          fullWidth={false}
                                                          required={false}
                                                          variant="outlined"
                                                        >
                                                          <ForwardRef(FormControl)
                                                            className="MuiTextField-root makeStyles-textField-19"
                                                            classes={
                                                              Object {
                                                                "fullWidth": "MuiFormControl-fullWidth",
                                                                "marginDense": "MuiFormControl-marginDense",
                                                                "marginNormal": "MuiFormControl-marginNormal",
                                                                "root": "MuiFormControl-root",
                                                              }
                                                            }
                                                            color="primary"
                                                            disabled={false}
                                                            error={false}
                                                            fullWidth={false}
                                                            required={false}
                                                            variant="outlined"
                                                          >
                                                            <div
                                                              className="MuiFormControl-root MuiTextField-root makeStyles-textField-19"
                                                            >
                                                              <WithStyles(ForwardRef(InputLabel))>
                                                                <ForwardRef(InputLabel)
                                                                  classes={
                                                                    Object {
                                                                      "animated": "MuiInputLabel-animated",
                                                                      "asterisk": "MuiInputLabel-asterisk",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "filled": "MuiInputLabel-filled",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInputLabel-formControl",
                                                                      "marginDense": "MuiInputLabel-marginDense",
                                                                      "outlined": "MuiInputLabel-outlined",
                                                                      "required": "Mui-required",
                                                                      "root": "MuiInputLabel-root",
                                                                      "shrink": "MuiInputLabel-shrink",
                                                                    }
                                                                  }
                                                                >
                                                                  <WithStyles(ForwardRef(FormLabel))
                                                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                    classes={
                                                                      Object {
                                                                        "asterisk": "MuiInputLabel-asterisk",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "required": "Mui-required",
                                                                      }
                                                                    }
                                                                    data-shrink={false}
                                                                  >
                                                                    <ForwardRef(FormLabel)
                                                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                      classes={
                                                                        Object {
                                                                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                          "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "filled": "MuiFormLabel-filled",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "required": "Mui-required Mui-required",
                                                                          "root": "MuiFormLabel-root",
                                                                        }
                                                                      }
                                                                      data-shrink={false}
                                                                    >
                                                                      <label
                                                                        className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                        data-shrink={false}
                                                                      >
                                                                        Search
                                                                      </label>
                                                                    </ForwardRef(FormLabel)>
                                                                  </WithStyles(ForwardRef(FormLabel))>
                                                                </ForwardRef(InputLabel)>
                                                              </WithStyles(ForwardRef(InputLabel))>
                                                              <WithStyles(ForwardRef(OutlinedInput))
                                                                autoFocus={false}
                                                                className="makeStyles-textFieldInput-20"
                                                                fullWidth={false}
                                                                label={
                                                                  <React.Fragment>
                                                                    Search
                                                                  </React.Fragment>
                                                                }
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <ForwardRef(OutlinedInput)
                                                                  autoFocus={false}
                                                                  className="makeStyles-textFieldInput-20"
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "input": "MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                      "marginDense": "MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiOutlinedInput-multiline",
                                                                      "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                      "root": "MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={false}
                                                                  label={
                                                                    <React.Fragment>
                                                                      Search
                                                                    </React.Fragment>
                                                                  }
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <WithStyles(ForwardRef(InputBase))
                                                                    autoFocus={false}
                                                                    className="makeStyles-textFieldInput-20"
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                        "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "input": "MuiOutlinedInput-input",
                                                                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                        "marginDense": "MuiOutlinedInput-marginDense",
                                                                        "multiline": "MuiOutlinedInput-multiline",
                                                                        "notchedOutline": null,
                                                                        "root": "MuiOutlinedInput-root",
                                                                      }
                                                                    }
                                                                    fullWidth={false}
                                                                    inputComponent="input"
                                                                    multiline={false}
                                                                    onChange={[Function]}
                                                                    renderSuffix={[Function]}
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <ForwardRef(InputBase)
                                                                      autoFocus={false}
                                                                      className="makeStyles-textFieldInput-20"
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                          "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                          "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "formControl": "MuiInputBase-formControl",
                                                                          "fullWidth": "MuiInputBase-fullWidth",
                                                                          "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                          "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                          "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                          "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                          "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                        }
                                                                      }
                                                                      fullWidth={false}
                                                                      inputComponent="input"
                                                                      multiline={false}
                                                                      onChange={[Function]}
                                                                      renderSuffix={[Function]}
                                                                      type="text"
                                                                      value=""
                                                                    >
                                                                      <div
                                                                        className="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldInput-20 MuiInputBase-formControl"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <input
                                                                          aria-invalid={false}
                                                                          autoFocus={false}
                                                                          className="MuiInputBase-input MuiOutlinedInput-input"
                                                                          disabled={false}
                                                                          onAnimationStart={[Function]}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          type="text"
                                                                          value=""
                                                                        />
                                                                        <WithStyles(ForwardRef(NotchedOutline))
                                                                          className="MuiOutlinedInput-notchedOutline"
                                                                          label={
                                                                            <React.Fragment>
                                                                              Search
                                                                            </React.Fragment>
                                                                          }
                                                                          labelWidth={0}
                                                                          notched={false}
                                                                        >
                                                                          <ForwardRef(NotchedOutline)
                                                                            className="MuiOutlinedInput-notchedOutline"
                                                                            classes={
                                                                              Object {
                                                                                "legend": "PrivateNotchedOutline-legend-9",
                                                                                "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                                                                "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                                                                "root": "PrivateNotchedOutline-root-8",
                                                                              }
                                                                            }
                                                                            label={
                                                                              <React.Fragment>
                                                                                Search
                                                                              </React.Fragment>
                                                                            }
                                                                            labelWidth={0}
                                                                            notched={false}
                                                                          >
                                                                            <fieldset
                                                                              aria-hidden={true}
                                                                              className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                                                            >
                                                                              <legend
                                                                                className="PrivateNotchedOutline-legendLabelled-10"
                                                                              >
                                                                                <span>
                                                                                  Search
                                                                                </span>
                                                                              </legend>
                                                                            </fieldset>
                                                                          </ForwardRef(NotchedOutline)>
                                                                        </WithStyles(ForwardRef(NotchedOutline))>
                                                                      </div>
                                                                    </ForwardRef(InputBase)>
                                                                  </WithStyles(ForwardRef(InputBase))>
                                                                </ForwardRef(OutlinedInput)>
                                                              </WithStyles(ForwardRef(OutlinedInput))>
                                                            </div>
                                                          </ForwardRef(FormControl)>
                                                        </WithStyles(ForwardRef(FormControl))>
                                                      </ForwardRef(TextField)>
                                                    </WithStyles(ForwardRef(TextField))>
                                                  </OutlinedTextField>
                                                </_default>
                                              </div>
                                            </ForwardRef(Toolbar)>
                                          </WithStyles(ForwardRef(Toolbar))>
                                        </header>
                                      </ForwardRef(Paper)>
                                    </WithStyles(ForwardRef(Paper))>
                                  </ForwardRef(AppBar)>
                                </WithStyles(ForwardRef(AppBar))>
                              </CardHeader>
                              <ScoreTable
                                scores={Array []}
                              >
                                <styled.div>
                                  <div
                                    className="sc-dQppl bikRgb"
                                  >
                                    <styled.div>
                                      <div
                                        className="sc-bqyKva iTAZph"
                                      >
                                        <styled.div
                                          fontWeight="bold"
                                          width="320px"
                                        >
                                          <div
                                            className="sc-crrsfI fsQCUy"
                                            color="white"
                                            fontWeight="bold"
                                            width="320px"
                                          >
                                            Name
                                          </div>
                                        </styled.div>
                                        <styled.div
                                          fontWeight="bold"
                                          width="80px"
                                        >
                                          <div
                                            className="sc-crrsfI jvfOaP"
                                            color="white"
                                            fontWeight="bold"
                                            width="80px"
                                          >
                                            Points
                                          </div>
                                        </styled.div>
                                        <styled.div
                                          fontWeight="bold"
                                          width="100px"
                                        >
                                          <div
                                            className="sc-crrsfI ftgVyG"
                                            color="white"
                                            fontWeight="bold"
                                            width="100px"
                                          >
                                            Type
                                          </div>
                                        </styled.div>
                                      </div>
                                    </styled.div>
                                  </div>
                                </styled.div>
                              </ScoreTable>
                            </div>
                          </styled.div>
                        </Scores>
                      </div>
                    </styled.div>
                  </Home>
                </Route>
              </Switch>
            </AppSub>
          </Router>
        </HashRouter>
      </ThemeProvider>
    </Component>
  </Provider>
</App>
`;

exports[`renders correctly enzyme 2`] = `null`;
